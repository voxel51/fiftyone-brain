name: Build

on:
  pull_request:
    branches:
      - develop
    types: [opened, synchronize]
  push:
    branches:
      - develop
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux-aarch64
          - linux-x86_64
          - mac-arm64
          - mac-x86_64
          - win-amd64
        python:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
        exclude:
          - platform: mac-arm64
            python: 3.6
          - platform: mac-arm64
            python: 3.7
    steps:
      - name: Clone fiftyone-brain
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Check Python version
        run: |
          python --version
          pip --version
      - name: Install dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip install pyarmor twine
      - name: Set environment
        env:
          RELEASE_TAG: ${{ github.ref }}
        run: |
          if [[ $RELEASE_TAG =~ ^refs\/tags\/v.* ]]; then
             echo "RELEASE_VERSION=$(echo '${{ github.ref }}' | sed 's/^refs\/tags\/v//')" >> $GITHUB_ENV
          fi
      - name: Build wheel
        run: |
          python setup.py bdist_wheel --plat-name ${{ matrix.platform }}
      - name: Upload wheel
        uses: actions/upload-artifact@v2
        with:
          name: wheel-${{ matrix.platform }}-${{ matrix.python }}
          path: dist/*.whl

  test:
    needs: [build]
    runs-on: ubuntu-20.04
    env:
      FIFTYONE_DO_NOT_TRACK: true
    strategy:
      fail-fast: false
      matrix:
        python:
          - 3.6
          - 3.9
    steps:
      - name: Clone fiftyone-brain
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip setuptools wheel
      - name: Download fiftyone-brain wheel
        uses: actions/download-artifact@v2
        with:
          name: wheel-linux-x86_64-${{ matrix.python }}
          path: downloads
      - name: Install fiftyone
        run: |
          git clone https://${{ secrets.FIFTYONE_GITHUB_TOKEN }}@github.com/voxel51/fiftyone fiftyone-src --depth 1 --branch develop
          cd fiftyone-src
          python setup.py bdist_wheel
          pip install voxel51-eta[storage] fiftyone-db
          pip install ./dist/*.whl
      - name: Reinstall fiftyone-brain
        run: |
          pip install --force-reinstall --no-deps downloads/*.whl
      - name: Set up ETA credentials
        env:
          FIFTYONE_GOOGLE_CREDENTIALS: ${{ secrets.FIFTYONE_GOOGLE_CREDENTIALS }}
        run: |
          mkdir -p "${HOME}/.eta"
          echo "$FIFTYONE_GOOGLE_CREDENTIALS" > "${HOME}/.eta/google-credentials.json"
          wc "${HOME}/.eta/google-credentials.json"
          md5sum "${HOME}/.eta/google-credentials.json"
      - name: Install test dependencies
        run: |
          pip install imageio pytest torch torchvision
      - name: Run tests
        run: |
          pytest --verbose tests/ --ignore tests/intensive/

  publish:
    needs: [build, test]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-20.04
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v2
        with:
          path: downloads
      - name: Install dependencies
        run: |
          pip3 install --upgrade pip setuptools wheel
          pip3 install twine
      - name: Set environment
        env:
          RELEASE_TAG: ${{ github.ref }}
        run: |
          if [[ $RELEASE_TAG =~ ^refs\/tags\/v.*-rc\..*$ ]]; then
             echo "TWINE_PASSWORD=${{ secrets.FIFTYONE_TEST_PYPI_TOKEN }}" >> $GITHUB_ENV
             echo "TWINE_REPOSITORY=testpypi" >> $GITHUB_ENV
          else
             echo "TWINE_PASSWORD=${{ secrets.FIFTYONE_PYPI_TOKEN }}" >> $GITHUB_ENV
             echo "TWINE_REPOSITORY=pypi" >> $GITHUB_ENV
          fi
      - name: Upload to pypi
        env:
          TWINE_USERNAME: __token__
          TWINE_NON_INTERACTIVE: 1
        run: |
          python3 -m twine upload downloads/wheel-*/*.whl
